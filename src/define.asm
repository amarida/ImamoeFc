REG0										= $00	; 汎用0
REG1										= $01	; 汎用1
REG2										= $02	; 汎用2
REG3										= $03	; 汎用3
REG4										= $04	; 汎用4
REG5										= $05	; 汎用5
REG6										= $06	; 汎用6
scroll_x									= $07	; 
scroll_y									= $08	; 
player_draw_status							= $09	; 描画タイプ…0:通常、1:ジャンプ、2:攻撃中1、3:攻撃中2、4:死亡
attack_frame								= $0A	; 攻撃フレーム
count_y										= $0B
player_x_low								= $0C	; プレイヤ位置X（下位）上位はplayer_x_up
player_x_decimal							= $0D	; プレイヤ位置X（小数部）
player_y									= $0E	; プレイヤ位置Y（+1は小数部）
; 小数部									= $0F	
screen_x									= $10	; スクリーン位置
spd_y										= $11	; Y方向速度（+1は小数部）
; 小数部									= $12
spd_vec										= $13	; 速度方向（0下方向、1上方向）
player_spd_decial							= $14
player_spd_low								= $15
player_speed_hi_or_low						= $16	; プレイヤースピード速い
is_jump										= $17
p_pat										= $18	; プレイヤ描画パターン
pat_change_frame							= $19
chr_lr										= $1A	; キャラクタ左右フラグ
FIELD_HEIGHT								= $1B	; 地面の高さ
multiplicand								= $1C	; 被乗数（かけられる数）
multiplier									= $1D	; 乗数（かける数）
multi_ans_up								= $1E	; 乗算結果　上位ビット
multi_ans_low								= $1F	; 乗算結果　下位ビット
multi_loop_cnt								= $20	; 乗算用ループカウンタ
conv_coord_bit_x							= $21	; X座標
conv_coord_bit_y							= $22	; Y座標
conv_coord_bit_up							= $23	; 上位ビット
conv_coord_bit_low							= $24	; 下位ビット
draw_bg_tile								= $25	; タイル番号
draw_bg_x									= $26	; X座標
draw_bg_y									= $27	; Y座標
draw_bg_w									= $28	; 横ブロック数
draw_bg_h									= $29	; 縦ブロック数
draw_loop_x									= $2A	; ループ変数
draw_loop_y									= $2B	; ループ変数
bg_already_draw								= $2C	; BG描画済み変数（ブロック単位）
field_scroll_x_up							= $2D	; ゲーム内のスクロール位置上位
field_scroll_x_low							= $2E	; ゲーム内のスクロール位置下位
player_x_up									= $2F	; プレイヤ位置X上位
window_player_x_up							= $30	; ウィンドウ内の位置上位
window_player_x_low							= $31	; ウィンドウ内の位置下位
window_player_x_low8						= $32	; ウィンドウ内の位置-8下位
draw_bg_display								= $33	; 画面１画面２（20か24か）
draw_index_y								= $34	; 描画時のインデックスレジストリのテンプ
loop_count									= $35	; ループカウント
vblank_count								= $36	; VBlankのカウント
map_table_screen_low						= $37	; 
map_table_screen_hi							= $38	;
bg_already_draw_attribute					= $39	; BG属性設定済み変数（4ブロック単位）
map_table_attribute_low						= $3A	; 
map_table_attribute_hi						= $3B	;
offset_y_attribute							= $3C	; 属性テーブルオフセットY
attribute_pos_adress_up						= $3D	; 属性テーブルの位置アドレス上位
attribute_pos_adress_low					= $3E	; 属性テーブルの位置アドレス下位
current_draw_display_no						= $3F	; 現在の描画画面番号（0 or 1）
map_table_now_low							= $40	; 
map_table_now_hi							= $41	;
bg_already_draw_pos							= $42	; BG描画位置（ブロック単位）
bg_already_draw_attribute_pos				= $43	; BG属性設定位置（4ブロック単位）
pow_two										= $44
map_diff_x_index							= $45
map_chip_player_x_low						= $46	; あたり判定用キャラクタマップチップ座標X low
map_chip_player_x_hi						= $47	; あたり判定用キャラクタマップチップ座標X hi
map_chip_player_y							= $48	; あたり判定用キャラクタマップチップ座標Y
map_chip_collision_index_base_low			= $49
map_chip_collision_index_base_hi			= $4A
map_table_char_pos_offset_low				= $4B	; 
map_table_char_pos_offset_hi				= $4C	;
map_table_char_pos_value					= $4D	;
obj_collision_result						= $4E	; オブジェクトとのあたり判定結果
player_y_top_for_collision					= $4F	;	あたり判定用上Y座標（Y座標）
player_y_bottom_for_collision				= $50	;	あたり判定用下Y座標（Y座標+31）
player_x_left_hi_for_collision				= $51	;	あたり判定用左X座標上位（X座標）
player_x_left_low_for_collision				= $52	;	あたり判定用左X座標下位（X座標）
player_x_right_hi_for_collision				= $53	;	あたり判定用右X座標上位（X座標+15）
player_x_right_low_for_collision			= $54	;	あたり判定用右X座標下位（X座標+15）
map_chip_collision_index_left_bottom_low	= $55
map_chip_collision_index_left_bottom_hi		= $56
map_chip_collision_index_left_top_low		= $57
map_chip_collision_index_left_top_hi		= $58
map_chip_collision_index_right_bottom_low	= $59
map_chip_collision_index_right_bottom_hi	= $5A
map_chip_collision_index_right_top_low		= $5B
map_chip_collision_index_right_top_hi		= $5C
obj_collision_pos							= $5D	; オブジェクトとの当たった場所(上下)(0〜1)左下、左上、右下、右上
char_collision_result						= $5E	; 敵キャラとのあたり判定結果
is_dead										= $5F	; 死亡中
key_state_on								= $60	; 現在のキーボード状態
key_state_on_old							= $61	; 古いキーボード状態
key_state_push								= $62	; このフレームで押された状態
update_dead_step							= $63	; 死亡時更新ステップ
wait_frame									= $64	; 待つフレーム
test_address_low							= $65
test_address_hi								= $66
scene_type									= $67	; シーン（0:TITLE 1:メイン 2:ゲームオーバー）
scene_update_step							= $68	; シーン用の更新ステップ
map_enemy_info_address_low					= $69
map_enemy_info_address_hi					= $6A
enemy_kind									= $6B	; 敵の種類
enemy_pos_x_low								= $6C
enemy_pos_x_hi								= $6D
enemy_pos_y									= $6E
enemy_type									= $6F
inosisi_alive_flag							= $70	; イノシシ生きているフラグ
inosisi_max_count							= $71	; 最大同時数
inosisi_alive_flag_current					= $72	; フラグ参照現在位置
inosisi0_world_pos_x_low					= $73	; イノシシ0 WORLD座標 X軸 下位
inosisi1_world_pos_x_low					= $74	; イノシシ1 WORLD座標 X軸 下位
inosisi0_world_pos_x_hi						= $75	; イノシシ0 WORLD座標 X軸 上位
inosisi1_world_pos_x_hi						= $76	; イノシシ1 WORLD座標 X軸 上位
inosisi0_pos_y								= $77	; イノシシ0 WORLD座標 Y軸
inosisi1_pos_y								= $78	; イノシシ1 WORLD座標 Y軸
inosisi0_window_pos_x						= $79	; イノシシ0 WINDOW座標 X軸
inosisi1_window_pos_x						= $7A	; イノシシ1 WINDOW座標 X軸
obj_collision_sea							= $7B	; 海と当たった判定
inosisi00_status							= $7C	; イノシシ00状態(0:通常、1:溺れる、2:水しぶき1、3:水しぶき2)
inosisi01_status							= $7D	; イノシシ01状態(0:通常、1:溺れる、2:水しぶき1、3:水しぶき2)
inosisi00_wait								= $7E	; イノシシ00待ち
inosisi01_wait								= $7F	; イノシシ01待ち
inosisi00_update_dead_step					= $80	; イノシシ00死亡時更新処理ステップ
inosisi01_update_dead_step					= $81	; イノシシ01死亡時更新処理ステップ
scroll_count_8dot							= $82	; スクロール用カウンタ
scroll_count_8dot_count						= $83	; スクロール用カウンタ
scroll_count_32dot							= $84	; スクロール用カウンタ
scroll_count_32dot_count					= $85	; スクロール用カウンタ
timer_bcd1									= $86	; タイマーBCD用2バイト目
timer_bcd0									= $87	; タイマーBCD用1バイト目
timer_b1									= $88	; タイマー2進数用2バイト目
timer_b0									= $89	; タイマー2進数用1バイト目
score_bcd2									= $8A	; スコアBCD用3バイト目
score_bcd1									= $8B	; スコアBCD用2バイト目
score_bcd0									= $8C	; スコアBCD用1バイト目
score_b1									= $8D	; スコア2進数用2バイト目
score_b0									= $8E	; スコア2進数用1バイト目
count_up8									= $8F	; ループカウント
timer_count									= $90	; タイマー用カウンタ
bgm_nomal_address_low						= $91	;
bgm_nomal_address_hi						= $92	;
bgm_nomal_sankaku_address_low				= $93
bgm_nomal_sankaku_address_hi				= $94
bgm_kukei_count								= $95
bgm_sankaku_count							= $96
bgm_kukei_step								= $97
bgm_sankaku_step							= $98
bgm_kukei_wait_frame						= $99
bgm_sankaku_wait_frame						= $9A
bgm_type									= $9B
scene_maingame_init							= $9C
se_jump_address_low							= $9D	;
se_jump_address_hi							= $9E	;
se_type										= $9F
se_kukei_step								= $A0
se_kukei_count								= $A1
se_kukei_wait_frame							= $A2
tako_alive_flag								= $A3	; タコ生きているフラグ
tako_haba_alive_flag						= $A4	; はばタコ生きているフラグ
tako_max_count								= $A5	; 最大同時数
tako_alive_flag_current						= $A6	; フラグ参照現在位置
tako0_world_pos_x_decimal					= $A7	; タコ0 WORLD座標 X軸 小数部
tako1_world_pos_x_decimal					= $A8	; タコ1 WORLD座標 X軸 小数部
tako0_world_pos_x_low						= $A9	; タコ0 WORLD座標 X軸 下位
tako1_world_pos_x_low						= $AA	; タコ1 WORLD座標 X軸 下位
tako0_world_pos_x_hi						= $AB	; タコ0 WORLD座標 X軸 上位
tako1_world_pos_x_hi						= $AC	; タコ1 WORLD座標 X軸 上位
tako0_pos_y									= $AD	; タコ0 WORLD座標 Y軸
tako1_pos_y									= $AE	; タコ1 WORLD座標 Y軸
tako0_window_pos_x							= $AF	; タコ0 WINDOW座標 X軸
tako1_window_pos_x							= $B0	; タコ1 WINDOW座標 X軸
tako00_status								= $B1	; タコ00状態(0:通常、1:燃える)
tako01_status								= $B2	; タコ01状態(0:通常、1:燃える)
tamanegi_alive_flag							= $B3	; タマネギ生きているフラグ
tamanegi_max_count							= $B4	; 最大同時数
tamanegi_alive_flag_current					= $B5	; フラグ参照現在位置
tamanegi_type_flag							= $B6	; タマネギタイプ
tamanegi0_world_pos_x_decimal				= $B7	; タマネギ0 WORLD座標 X軸 小数部
tamanegi1_world_pos_x_decimal				= $B8	; タマネギ1 WORLD座標 X軸 小数部
tamanegi0_world_pos_x_low					= $B9	; タマネギ0 WORLD座標 X軸 下位
tamanegi1_world_pos_x_low					= $BA	; タマネギ1 WORLD座標 X軸 下位
tamanegi0_world_pos_x_hi					= $BB	; タマネギ0 WORLD座標 X軸 上位
tamanegi1_world_pos_x_hi					= $BC	; タマネギ1 WORLD座標 X軸 上位
tamanegi0_pos_y								= $BD	; タマネギ0 WORLD座標 Y軸
tamanegi1_pos_y								= $BE	; タマネギ1 WORLD座標 Y軸
tamanegi0_window_pos_x						= $BF	; タマネギ0 WINDOW座標 X軸
tamanegi1_window_pos_x						= $C0	; タマネギ1 WINDOW座標 X軸
tamanegi00_status							= $C1	; タマネギ00状態(0:大砲の中、1:放物線、2:通常、3:炎上)
tamanegi01_status							= $C2	; タマネギ01状態
tamanegi00_wait								= $C3	; タマネギ00待ち
tamanegi01_wait								= $C4	; タマネギ01待ち
tamanegi00_update_step						= $C5	; タマネギ00共通内部更新ステップ
tamanegi01_update_step						= $C6	; タマネギ01共通内部更新ステップ
tamanegi00_spd_y							= $C7	; Y方向速度（+1は小数部）
tamanegi01_spd_y							= $C8	; Y方向速度（+1は小数部）
tamanegi00_spd_y_decimal					= $C9	; 小数部
tamanegi01_spd_y_decimal					= $CA	; 小数部
tamanegi00_spd_vec							= $CB	; 速度方向（0下方向、1上方向）
tamanegi01_spd_vec							= $CC	; 速度方向（0下方向、1上方向）
cannon_world_x_low							= $CD
cannon_world_x_hi							= $CE
cannon_y									= $CF	;					(	0:なにもしない、1:2をタマネギ、2:3を炎
cannon_alive_flag							= $D0	;						3:4をはばタン、4:2をイノシシ、5:2をタコ
palette_change_state						= $D1	; パレットチェンジ用	6:3をタコ、7:3を酒下4を酒上、8:酒獲得			)
fire_alive_flag								= $D2	; 炎生きているフラグ
fire_max_count								= $D3	; 最大同時数
fire_alive_flag_current						= $D4	; フラグ参照現在位置
fire0_world_x_low							= $D5
fire1_world_x_low							= $D6
fire0_world_x_hi							= $D7
fire1_world_x_hi							= $D8
fire0_y										= $D9
fire1_y										= $DA
fire0_window_x								= $DB
fire1_window_x								= $DC
update_result								= $DD
habatan_alive_flag							= $DE	; はばタン生きているフラグ
habatan_world_pos_x_low						= $DF	; はばタン WORLD座標 X軸 下位
habatan_world_pos_x_hi						= $E0	; はばタン WORLD座標 X軸 上位
habatan_pos_y								= $E1	; はばタン WORLD座標 Y軸
habatan_window_pos_x						= $E2	; はばタン WINDOW座標 X軸
habatan_status								= $E3	; はばタン状態(0:近づく、1:くっつく、2:退場)
habatan_wait_low							= $E4	; はばタン登場フレーム
habatan_wait_hi								= $E5	; はばタン登場フレーム
habatan_fire_alive_flag						= $E6	; はばタンファイアー存在フラグ
habatan_fire_status							= $E7	; はばタンファイアー状態(0, 1, 2)
habatan_fire_wait							= $E8	; はばタンファイアー待ち
item_alive_flag								= $E9	; アイテム存在フラグ
item_world_pos_x_low						= $EA	; アイテムワールドX座標
item_world_pos_x_hi							= $EB	; アイテムワールドX座標
item_status									= $EC	; アイテム状態（0:表示、1:点滅）
item_window_pos_x							= $ED	; アイテムウィンドウX座標
item_pos_y									= $EE	; アイテムY座標
item_wait									= $EF	; アイテム待ち

debug_var									= $FF	; デバッグ用
