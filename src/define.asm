REG0										= $00	; 汎用0
REG1										= $01	; 汎用1
REG2										= $02	; 汎用2
REG3										= $03	; 汎用3
REG4										= $04	; 汎用4
REG5										= $05	; 汎用5
REG6										= $06	; 汎用6
scroll_x									= $07	; 
scroll_y									= $08	; 
player_draw_status							= $09	; 描画タイプ…0:通常、1:ジャンプ、2:攻撃中1、3:攻撃中2、4:死亡
attack_frame								= $0A	; 攻撃フレーム
count_y										= $0B
player_x_low								= $0C	; プレイヤ位置X（下位）上位はplayer_x_up
player_x_decimal							= $0D	; プレイヤ位置X（小数部）
player_y									= $0E	; プレイヤ位置Y（+1は小数部）
; 小数部									= $0F	
screen_x									= $10	; スクリーン位置
spd_y										= $11	; Y方向速度（+1は小数部）
; 小数部									= $12
spd_vec										= $13	; 速度方向（0下方向、1上方向）
player_spd_decial							= $14
player_spd_low								= $15
player_speed_hi_or_low						= $16	; プレイヤースピード速い
is_jump										= $17
p_pat										= $18	; プレイヤ描画パターン
pat_change_frame							= $19
chr_lr										= $1A	; キャラクタ左右フラグ
FIELD_HEIGHT								= $1B	; 地面の高さ
multiplicand								= $1C	; 被乗数（かけられる数）
multiplier									= $1D	; 乗数（かける数）
multi_ans_up								= $1E	; 乗算結果　上位ビット
multi_ans_low								= $1F	; 乗算結果　下位ビット
multi_loop_cnt								= $20	; 乗算用ループカウンタ
conv_coord_bit_x							= $21	; X座標
conv_coord_bit_y							= $22	; Y座標
conv_coord_bit_up							= $23	; 上位ビット
conv_coord_bit_low							= $24	; 下位ビット
draw_bg_tile								= $25	; タイル番号
draw_bg_x									= $26	; X座標
draw_bg_y									= $27	; Y座標
draw_bg_w									= $28	; 横ブロック数
draw_bg_h									= $29	; 縦ブロック数
draw_loop_x									= $2A	; ループ変数
draw_loop_y									= $2B	; ループ変数
bg_already_draw								= $2C	; BG描画済み変数（ブロック単位）
field_scroll_x_up							= $2D	; ゲーム内のスクロール位置上位
field_scroll_x_low							= $2E	; ゲーム内のスクロール位置下位
player_x_up									= $2F	; プレイヤ位置X上位
window_player_x_up							= $30	; ウィンドウ内の位置上位
window_player_x_low							= $31	; ウィンドウ内の位置下位
window_player_x_low8						= $32	; ウィンドウ内の位置-8下位
map_chip_index_up							= $33	; マップチップインデックス上位
map_chip_index_low							= $34	; マップチップインデックス下位
map_chip_offset_cal16_up					= $35	; マップチップオフセット
map_chip_offset_cal16_low					= $36	; マップチップオフセット
map_chip_offset_cal8_up						= $37	; マップチップオフセット
map_chip_offset_cal8_low					= $38	; マップチップオフセット
map_chip_offset_cal2_up						= $39	; マップチップオフセット
map_chip_offset_cal2_low					= $3A	; マップチップオフセット
map_chip_offset_cal_up						= $3B	; マップチップオフセット
map_chip_offset_cal_low						= $3C	; マップチップオフセット
map_chip_offset_up							= $3D	; マップチップオフセット
map_chip_offset_low							= $3E	; マップチップオフセット
map_chip_offset_start						= $3F	; マップチップオフセット
draw_bg_display								= $40	; 画面１画面２（20か24か）
draw_index_y								= $41	; 描画時のインデックスレジストリのテンプ
field_scroll_x_up_tmp						= $42	; ゲーム内のスクロール位置上位テンプ
field_scroll_x_low_tmp						= $43	; ゲーム内のスクロール位置下位テンプ
loop_count									= $44	; ループカウント
vblank_count								= $45	; VBlankのカウント
map_table_screen_low						= $46	; 
map_table_screen_hi							= $47	;
bg_already_draw_attribute					= $48	; BG属性設定済み変数（4ブロック単位）
map_table_attribute_low						= $49	; 
map_table_attribute_hi						= $4A	;
offset_y_attribute							= $4B	; 属性テーブルオフセットY
attribute_pos_adress_up						= $4C	; 属性テーブルの位置アドレス上位
attribute_pos_adress_low					= $4D	; 属性テーブルの位置アドレス下位
current_draw_display_no						= $4E	; 現在の描画画面番号（0 or 1）
map_table_now_low							= $4F	; 
map_table_now_hi							= $50	;
bg_already_draw_pos							= $51	; BG描画位置（ブロック単位）
bg_already_draw_attribute_pos				= $52	; BG属性設定位置（4ブロック単位）
pow_two										= $53
map_diff_x_index							= $54
map_chip_player_x_low						= $55	; あたり判定用キャラクタマップチップ座標X low
map_chip_player_x_hi						= $56	; あたり判定用キャラクタマップチップ座標X hi
map_chip_player_y							= $57	; あたり判定用キャラクタマップチップ座標Y
map_chip_collision_index_base_low			= $58
map_chip_collision_index_base_hi			= $59
map_table_char_pos_offset_low				= $5A	; 
map_table_char_pos_offset_hi				= $5B	;
map_table_char_pos_value					= $5C	;
obj_collision_result						= $5D	; オブジェクトとのあたり判定結果
player_y_top_for_collision					= $5E	;	あたり判定用上Y座標（Y座標）
player_y_bottom_for_collision				= $5F	;	あたり判定用下Y座標（Y座標+31）
player_x_left_hi_for_collision				= $60	;	あたり判定用左X座標上位（X座標）
player_x_left_low_for_collision				= $61	;	あたり判定用左X座標下位（X座標）
player_x_right_hi_for_collision				= $62	;	あたり判定用右X座標上位（X座標+15）
player_x_right_low_for_collision			= $63	;	あたり判定用右X座標下位（X座標+15）
map_chip_collision_index_left_bottom_low	= $64
map_chip_collision_index_left_bottom_hi		= $65
map_chip_collision_index_left_top_low		= $66
map_chip_collision_index_left_top_hi		= $67
map_chip_collision_index_right_bottom_low	= $68
map_chip_collision_index_right_bottom_hi	= $69
map_chip_collision_index_right_top_low		= $6A
map_chip_collision_index_right_top_hi		= $6B
obj_collision_pos							= $6C	; オブジェクトとの当たった場所(上下)(0〜1)左下、左上、右下、右上
char_collision_result						= $6D	; 敵キャラとのあたり判定結果
is_dead										= $6E	; 死亡中
key_state_on								= $6F	; 現在のキーボード状態
key_state_on_old							= $70	; 古いキーボード状態
key_state_push								= $71	; このフレームで押された状態
update_dead_step							= $72	; 死亡時更新ステップ
wait_frame									= $73	; 待つフレーム
test_address_low							= $74
test_address_hi								= $75
scene_type									= $76	; シーン（0:TITLE 1:メイン 2:ゲームオーバー）
scene_update_step							= $77	; シーン用の更新ステップ
map_enemy_info_address_low					= $78
map_enemy_info_address_hi					= $79
enemy_kind									= $7A	; 敵の種類
enemy_pos_x_low								= $7B
enemy_pos_x_hi								= $7C
enemy_pos_y									= $7D
enemy_type									= $7E
inosisi_alive_flag							= $7F	; イノシシ生きているフラグ
inosisi_max_count							= $80	; 最大同時数
inosisi_alive_flag_current					= $81	; フラグ参照現在位置
inosisi0_world_pos_x_low					= $82	; イノシシ0 WORLD座標 X軸 下位
inosisi1_world_pos_x_low					= $83	; イノシシ1 WORLD座標 X軸 下位
inosisi0_world_pos_x_hi						= $84	; イノシシ0 WORLD座標 X軸 上位
inosisi1_world_pos_x_hi						= $85	; イノシシ1 WORLD座標 X軸 上位
inosisi0_pos_y								= $86	; イノシシ0 WORLD座標 Y軸
inosisi1_pos_y								= $87	; イノシシ1 WORLD座標 Y軸
inosisi0_window_pos_x						= $88	; イノシシ0 WINDOW座標 X軸
inosisi1_window_pos_x						= $89	; イノシシ1 WINDOW座標 X軸
obj_collision_sea							= $8A	; 海と当たった判定
inosisi00_status							= $8B	; イノシシ00状態(0:通常、1:溺れる、2:水しぶき1、3:水しぶき2)
inosisi01_status							= $8C	; イノシシ01状態(0:通常、1:溺れる、2:水しぶき1、3:水しぶき2)
inosisi00_wait								= $8D	; イノシシ00待ち
inosisi01_wait								= $8E	; イノシシ01待ち
inosisi00_update_dead_step					= $8F	; イノシシ00死亡時更新処理ステップ
inosisi01_update_dead_step					= $90	; イノシシ01死亡時更新処理ステップ
scroll_count_8dot							= $91	; スクロール用カウンタ
scroll_count_8dot_count						= $92	; スクロール用カウンタ
scroll_count_32dot							= $93	; スクロール用カウンタ
scroll_count_32dot_count					= $94	; スクロール用カウンタ
timer_bcd1									= $95	; タイマーBCD用2バイト目
timer_bcd0									= $96	; タイマーBCD用1バイト目
timer_b1									= $97	; タイマー2進数用2バイト目
timer_b0									= $98	; タイマー2進数用1バイト目
score_bcd2									= $99	; スコアBCD用3バイト目
score_bcd1									= $9A	; スコアBCD用2バイト目
score_bcd0									= $9B	; スコアBCD用1バイト目
score_b1									= $9C	; スコア2進数用2バイト目
score_b0									= $9D	; スコア2進数用1バイト目
count_up8									= $9E	; ループカウント
timer_count									= $9F	; タイマー用カウンタ
bgm_nomal_address_low						= $A0	;
bgm_nomal_address_hi						= $A1	;
bgm_nomal_sankaku_address_low				= $A2
bgm_nomal_sankaku_address_hi				= $A3
bgm_kukei_count								= $A4
bgm_sankaku_count							= $A5
bgm_kukei_step								= $A6
bgm_sankaku_step							= $A7
bgm_kukei_wait_frame						= $A8
bgm_sankaku_wait_frame						= $A9
bgm_type									= $AA
scene_maingame_init							= $AB
se_jump_address_low							= $AC	;
se_jump_address_hi							= $AD	;
se_type										= $AE
se_kukei_step								= $AF
se_kukei_count								= $B0
se_kukei_wait_frame							= $B1
tako_alive_flag								= $B2	; タコ生きているフラグ
tako_haba_alive_flag						= $B3	; はばタコ生きているフラグ
tako_max_count								= $B4	; 最大同時数
tako_alive_flag_current						= $B5	; フラグ参照現在位置
tako0_world_pos_x_decimal					= $B6	; タコ0 WORLD座標 X軸 小数部
tako1_world_pos_x_decimal					= $B7	; タコ1 WORLD座標 X軸 小数部
tako0_world_pos_x_low						= $B8	; タコ0 WORLD座標 X軸 下位
tako1_world_pos_x_low						= $B9	; タコ1 WORLD座標 X軸 下位
tako0_world_pos_x_hi						= $BA	; タコ0 WORLD座標 X軸 上位
tako1_world_pos_x_hi						= $BB	; タコ1 WORLD座標 X軸 上位
tako0_pos_y									= $BC	; タコ0 WORLD座標 Y軸
tako1_pos_y									= $BD	; タコ1 WORLD座標 Y軸
tako0_window_pos_x							= $BE	; タコ0 WINDOW座標 X軸
tako1_window_pos_x							= $BF	; タコ1 WINDOW座標 X軸
tako00_status								= $C0	; タコ00状態(0:通常、1:燃える)
tako01_status								= $C1	; タコ01状態(0:通常、1:燃える)
tamanegi_alive_flag							= $C2	; タマネギ生きているフラグ
tamanegi_max_count							= $C3	; 最大同時数
tamanegi_alive_flag_current					= $C4	; フラグ参照現在位置
tamanegi_type_flag							= $C5	; タマネギタイプ
tamanegi0_world_pos_x_decimal				= $C6	; タマネギ0 WORLD座標 X軸 小数部
tamanegi1_world_pos_x_decimal				= $C7	; タマネギ1 WORLD座標 X軸 小数部
tamanegi0_world_pos_x_low					= $C8	; タマネギ0 WORLD座標 X軸 下位
tamanegi1_world_pos_x_low					= $C9	; タマネギ1 WORLD座標 X軸 下位
tamanegi0_world_pos_x_hi					= $CA	; タマネギ0 WORLD座標 X軸 上位
tamanegi1_world_pos_x_hi					= $CB	; タマネギ1 WORLD座標 X軸 上位
tamanegi0_pos_y								= $CC	; タマネギ0 WORLD座標 Y軸
tamanegi1_pos_y								= $CD	; タマネギ1 WORLD座標 Y軸
tamanegi0_window_pos_x						= $CE	; タマネギ0 WINDOW座標 X軸
tamanegi1_window_pos_x						= $CF	; タマネギ1 WINDOW座標 X軸
tamanegi00_status							= $D0	; タマネギ00状態(0:大砲の中、1:放物線、2:通常、3:炎上)
tamanegi01_status							= $D1	; タマネギ01状態
tamanegi00_wait								= $D2	; タマネギ00待ち
tamanegi01_wait								= $D3	; タマネギ01待ち
tamanegi00_update_step						= $D4	; タマネギ00共通内部更新ステップ
tamanegi01_update_step						= $D5	; タマネギ01共通内部更新ステップ
tamanegi00_spd_y							= $D6	; Y方向速度（+1は小数部）
tamanegi01_spd_y							= $D7	; Y方向速度（+1は小数部）
tamanegi00_spd_y_decimal					= $D8	; 小数部
tamanegi01_spd_y_decimal					= $D9	; 小数部
tamanegi00_spd_vec							= $DA	; 速度方向（0下方向、1上方向）
tamanegi01_spd_vec							= $DB	; 速度方向（0下方向、1上方向）
cannon_world_x_low							= $DC
cannon_world_x_hi							= $DD
cannon_y									= $DE	;					(	0:なにもしない、1:2をタマネギ、2:3を炎
cannon_alive_flag							= $DF	;						3:4をはばタン、4:2をイノシシ、5:2をタコ
palette_change_state						= $E0	; パレットチェンジ用	6:3をタコ、7:3を酒下4を酒上、8:酒獲得			)
fire_alive_flag								= $E1	; 炎生きているフラグ
fire_max_count								= $E2	; 最大同時数
fire_alive_flag_current						= $E3	; フラグ参照現在位置
fire0_world_x_low							= $E4
fire1_world_x_low							= $E5
fire0_world_x_hi							= $E6
fire1_world_x_hi							= $E7
fire0_y										= $E8
fire1_y										= $E9
fire0_window_x								= $EA
fire1_window_x								= $EB
update_result								= $EC
habatan_alive_flag							= $ED	; はばタン生きているフラグ
habatan_world_pos_x_low						= $EE	; はばタン WORLD座標 X軸 下位
habatan_world_pos_x_hi						= $EF	; はばタン WORLD座標 X軸 上位
habatan_pos_y								= $F0	; はばタン WORLD座標 Y軸
habatan_window_pos_x						= $F1	; はばタン WINDOW座標 X軸
habatan_status								= $F2	; はばタン状態(0:近づく、1:くっつく、2:退場)
habatan_wait_low							= $F3	; はばタン登場フレーム
habatan_wait_hi								= $F4	; はばタン登場フレーム
habatan_fire_alive_flag						= $F5	; はばタンファイアー存在フラグ
habatan_fire_status							= $F6	; はばタンファイアー状態(0, 1, 2)
habatan_fire_wait							= $F7	; はばタンファイアー待ち
item_alive_flag								= $F8	; アイテム存在フラグ
item_world_pos_x_low						= $F9	; アイテムワールドX座標
item_world_pos_x_hi							= $FA	; アイテムワールドX座標
item_status									= $FB	; アイテム状態（0:表示、1:点滅）
item_window_pos_x							= $FC	; アイテムウィンドウX座標
item_pos_y									= $FD	; アイテムY座標
item_wait									= $FE	; アイテム待ち

debug_var									= $FF	; デバッグ用
