REG0		=	$00	; 汎用0
REG1		=	$01	; 汎用1
REG2		=	$02	; 汎用2
REG3		=	$03	; 汎用3
REG4		=	$04	; 汎用4
REG5		=	$05	; 汎用5
REG6		=	$06	; 汎用6
scrool_x	=	$07	; $00をscrool_xとして使う
scrool_y	=	$08	; $01をscrool_yとして使う
loop_x		=	$09
loop_y		=	$0A
pos			=	$0B
;len			=	$0C			; 未使用
;diff				=	$0D
count_y				=	$0E
player_x_low		=	$0F	; プレイヤ位置X（下位）上位はplayer_x_up
player_x_decimal	=	$10	; プレイヤ位置X（小数部）
player_y			=	$11	; プレイヤ位置Y（+1は小数部）
screen_x			=	$13	; スクリーン位置
spd_y				=	$14	; Y方向速度（+1は小数部）
spd_vec				=	$16	; 速度方向（0下方向、1上方向）
is_jump				=	$17
p_pat				= $18 ; プレイヤ描画パターン
pat_change_frame	=	$19
chr_lr				= $1A	; キャラクタ左右フラグ
inosisi_x			= $1B	; イノシシ位置X
inosisi_y			= $1C	; イノシシ位置Y
FIELD_HEIGHT		=	$1D	; 地面の高さ
multiplicand		= $1E	; 被乗数（かけられる数）
multiplier			= $20	; 乗数（かける数）
multi_ans_up		= $21	; 乗算結果　上位ビット
multi_ans_low		= $22	; 乗算結果　下位ビット
multi_loop_cnt		= $23	; 乗算用ループカウンタ
conv_coord_bit_x	= $24	; X座標
conv_coord_bit_y	= $25	; Y座標
conv_coord_bit_up	= $26	; 上位ビット
conv_coord_bit_low	= $27	; 下位ビット
draw_bg_tile		= $28 ; タイル番号
draw_bg_x			= $29 ; X座標
draw_bg_y			= $2A ; Y座標
draw_bg_w			= $2B ; 横ブロック数
draw_bg_h			= $2C ; 縦ブロック数
draw_loop_x			= $2D ; ループ変数
draw_loop_y			= $2E ; ループ変数
bg_already_draw		= $2F	; BG描画済み変数（ブロック単位）
field_scrool_x_up	=	$30	; ゲーム内のスクロール位置上位
field_scrool_x_low	=	$31	; ゲーム内のスクロール位置下位
player_x_up			=	$32	; プレイヤ位置X上位
window_player_x_up	=	$33	; ウィンドウ内の位置上位
window_player_x_low	=	$34	; ウィンドウ内の位置下位
window_player_x_low8	=	$35	; ウィンドウ内の位置-8下位
map_chip_index_up	= $36	; マップチップインデックス上位
map_chip_index_low	= $37	; マップチップインデックス下位
map_chip_offset_cal16_up	= $38	; マップチップオフセット
map_chip_offset_cal16_low	= $39	; マップチップオフセット
map_chip_offset_cal8_up		= $3A	; マップチップオフセット
map_chip_offset_cal8_low	= $3B	; マップチップオフセット
map_chip_offset_cal2_up		= $3C	; マップチップオフセット
map_chip_offset_cal2_low	= $3D	; マップチップオフセット
map_chip_offset_cal_up		= $3E	; マップチップオフセット
map_chip_offset_cal_low		= $3F	; マップチップオフセット
map_chip_offset_up		= $40	; マップチップオフセット
map_chip_offset_low		= $41	; マップチップオフセット
map_chip_offset_start	= $42	; マップチップオフセット
draw_bg_display			=	$43	; 画面１画面２（20か24か）
draw_index_y			= $44 ; 描画時のインデックスレジストリのテンプ
field_scrool_x_up_tmp	=	$45	; ゲーム内のスクロール位置上位テンプ
field_scrool_x_low_tmp	=	$46	; ゲーム内のスクロール位置下位テンプ
loop_count				= $47	; ループカウント
vblank_count			= $48 ; VBlankのカウント
Reserved00				= $49 ; 予約00
Reserved01				= $4A ; 予約01
map_table_screen_low	= $4B ; 
map_table_screen_hi		= $4C ;
bg_already_draw_attribute	= $4D ; BG属性設定済み変数（4ブロック単位）
map_table_attribute_low		= $4E ; 
map_table_attribute_hi		= $4F ;
offset_y_attribute		= $50	; 属性テーブルオフセットY
attribute_pos_adress_up	= $51 ; 属性テーブルの位置アドレス上位
attribute_pos_adress_low	= $52 ; 属性テーブルの位置アドレス下位
current_draw_display_no	= $53 ; 現在の描画画面番号（0 or 1）
map_table_now_low			= $54 ; 
map_table_now_hi			= $55 ;
bg_already_draw_pos			= $56	; BG描画位置（ブロック単位）
bg_already_draw_attribute_pos	= $57 ; BG属性設定位置（4ブロック単位）
pow_two						= $58
map_diff_x_index			= $98
map_chip_player_x_low		= $99 ; あたり判定用キャラクタマップチップ座標X low
map_chip_player_x_hi		= $9A ; あたり判定用キャラクタマップチップ座標X hi
map_chip_player_y			= $9B ; あたり判定用キャラクタマップチップ座標Y
map_chip_collision_index_base_low = $9C
map_chip_collision_index_base_hi = $9D
map_table_char_pos_offset_low			= $9E ; 
map_table_char_pos_offset_hi			= $9F ;
map_table_char_pos_value			= $A0 ;
obj_collision_result				= $A1 ; オブジェクトとのあたり判定結果
player_y_top_for_collision			= $A2 ;	あたり判定用上Y座標（Y座標）
player_y_bottom_for_collision		= $A3 ;	あたり判定用下Y座標（Y座標+31）
player_x_left_hi_for_collision		= $A4 ;	あたり判定用左X座標上位（X座標）
player_x_left_low_for_collision		= $A5 ;	あたり判定用左X座標下位（X座標）
player_x_right_hi_for_collision		= $A6 ;	あたり判定用右X座標上位（X座標+15）
player_x_right_low_for_collision	= $A7 ;	あたり判定用右X座標下位（X座標+15）
map_chip_collision_index_left_bottom_low = $A8
map_chip_collision_index_left_bottom_hi = $A9
map_chip_collision_index_left_top_low = $AA
map_chip_collision_index_left_top_hi = $AB
map_chip_collision_index_right_bottom_low = $AC
map_chip_collision_index_right_bottom_hi = $AD
map_chip_collision_index_right_top_low = $AE
map_chip_collision_index_right_top_hi = $AF
obj_collision_type					= $B0	; オブジェクトとの当たったタイプ(0〜1)
char_collision_result				= $B1	; 敵キャラとのあたり判定結果
is_dead								= $B2	; 死亡中
key_state_on						= $B3	; 現在のキーボード状態
key_state_on_old					= $B4	; 古いキーボード状態
key_state_push						= $B5	; このフレームで押された状態
update_dead_step					= $B6	; 死亡時更新ステップ
wait_frame							= $B7	; 待つフレーム
test_address_low					= $B8
test_address_hi						= $B9
scene_type							= $BA	; シーン（0:TITLE 1:メイン 2:ゲームオーバー）
scene_update_step					= $BB	; シーン用の更新ステップ
